export PATH="$PWD/bin:$PATH"

#
# AWS Variables
#
# Note that the AWS cli will automatically detect and
# utilize specific environment variables if they're set.
# We've defined the keys below with dummy values; if you
# want to make use of things this way, you'll need to
# create credential files, update the paths below and
# uncomment the relative lines.
#

#
# NOTE: Don't commit secrets to git (or any other scm)
# since that's just asking for trouble. To help you do
# things a little cleaner, in the below values we're
# actually subshelling out to `cat` a file. This is much
# safer because you can store the file on disk and even
# encrypt it if you want piping through some CLI tool
# or some such to get the decrypted value.
#
# RECOMMENDATION: In anything you plan to use sensitive ENV
# variables like the `KEY_ID` and `ACCESS_KEY` below, try
# to remember to have your wrapper script run `unset` against
# the variables holding said sensitive data as part of a clean
# shutdown/pre-exit procedure. This makes sure that you don't
# have those same variables lingering around in your shell for
# subsequent, possibly-unrelated things you do later.
#
# Since this is using `direnv` all you have to do is `cd ..` and
# it'll restore your ENV to its prior condition, including a removal
# of those variables/values. But keep the above in mind if you wind
# up using this file in your own scripts for some reason.
#

#
# export AWS_ACCESS_KEY_ID="$(cat $HOME/path/to/secrets/aws_access_key_id)"
# export AWS_SECRET_ACCESS_KEY="$(cat $HOME/path/to/secrets/aws_secret_access_key)"
# export AWS_DEFAULT_REGION="us-west-2"
#
